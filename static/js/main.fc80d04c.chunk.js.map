{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","src","alt","CardList","robots","cardComponent","map","user","i","emails","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","borderTop","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","e","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLocaleLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCOCQ,EAZF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GAExB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAyCG,IAAI,WACrD,gCACG,6BAAKL,IACL,4BAAIC,WCYJK,EAlBE,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAITC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OAAQ,cAAC,EAAD,CAEJT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGC,QAHZD,MAMb,OACI,8BACKH,KCDEK,EAbE,SAAC,GAA8B,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aACxB,OACG,qBAAKZ,UAAU,OAAf,SACK,uBACAA,UAAU,mCACVa,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCAXI,G,MARD,SAACC,GACX,OACI,qBAAKC,MAAO,CAACC,UAAW,SAASC,UAAU,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,aCcJC,E,kDAhBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAMlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAE7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,2DAEJG,KAAKX,MAAMK,a,GAdCQ,aCiDZC,E,kDAzCX,aAAc,IAAD,8BACT,gBAcJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAEE,OAAOC,SAdrC,EAAKZ,MAAO,CACRpB,OAAQ,GACR8B,YAAY,IAJP,E,qDAOb,WAAoB,IAAD,OACfG,MAAM,8CACL/C,MAAK,SAAAgD,GAAQ,OAAIA,EAASC,UAC1BjD,MAAK,SAAAkD,GACF,EAAKX,SAAS,CAACzB,OAAQoC,S,oBAS/B,WACI,MAA6BZ,KAAKJ,MAA5BpB,EAAN,EAAMA,OAAQ8B,EAAd,EAAcA,YACRO,EAAiBrC,EAAOsC,QAAO,SAAAC,GACjC,OAAOA,EAAM9C,KAAK+C,oBAAoBC,SAASX,EAAYU,wBAElE,OAAQxC,EAAO0C,OAGR,sBAAK9C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWY,aAAcgB,KAAKI,iBAC/B,cAAC,EAAD,UACI,cAAC,EAAD,UACK,cAAC,EAAD,CAAU5B,OAAQqC,WAPlC,oBAAIzC,UAAU,KAAd,yB,GA3BU8B,a,MCDlBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BhE,M","file":"static/js/main.fc80d04c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Card = ({name, email, id}) =>{\r\n   // const {name, email, id} = props\r\n    return(\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?200x200`}  alt=\"robots\"/>\r\n            <div>\r\n               <h2>{name}</h2> \r\n               <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card.js\"\r\n\r\nconst CardList = ({robots})=>{\r\n    // if(true){\r\n    //     throw new Error(\"Nooo\");\r\n    // }\r\n    const cardComponent = robots.map((user, i)=>{\r\n        return (<Card \r\n            key={i} \r\n            id={robots[i].id} \r\n            name={robots[i].name} \r\n            email={robots[i].emails}\r\n            />);\r\n    })\r\n    return (\r\n        <div>\r\n            {cardComponent} \r\n        </div>\r\n    );\r\n}\r\nexport default CardList;","import React from \"react\";\r\n\r\n\r\nconst SearchBox =({searchField, searchChange})=>{\r\n        return (\r\n           <div className=\"pa2 \">\r\n                <input\r\n                className=\"pa3 ba b--green bg-lightest-blue\" \r\n                type=\"search\" \r\n                placeholder=\"search robots\"\r\n                onChange={searchChange} \r\n                />\r\n           </div>\r\n        );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll= (props)=>{\r\n    return(\r\n        <div style={{overflowY: \"scroll\",borderTop:'1px solid white', height: \"800px\" }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n   \r\n}\r\nexport default Scroll;","import React, {Component} from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true})\r\n    }\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Ooooops. That is not good</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\nexport default ErrorBoundry","import React, {Component} from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport  SearchBox from \"../components/SearchBox\";\r\nimport \"./App.css\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\n\r\n\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            robots: [],\r\n            searchfield:\"\"\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(response=>  response.json())\r\n        .then(users=>{\r\n            this.setState({robots: users})\r\n        })\r\n       \r\n    }\r\n    onSearchChange = (e)=>{\r\n        this.setState({searchfield: e.target.value});\r\n     \r\n        \r\n    }\r\n    render(){\r\n        const{robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot=>{\r\n            return robot.name.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase());\r\n        })\r\n     return !robots.length ?\r\n        <h1 className=\"tc\">loading</h1>:\r\n      (\r\n            <div className=\"tc\">\r\n                <h1 className=\"f2\">RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n               <Scroll>\r\n                   <ErrorBoundry>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </ErrorBoundry>\r\n               </Scroll>\r\n            </div>\r\n        );\r\n     \r\n    }\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./containers/App\";\nimport \"tachyons\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}